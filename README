Project 4: James Solum

1. Project 4: nothing has changed. Project 3: The proposal: There were some changes that need to be addressed to my database, therefore the proposal has been changed.  Most notably an addition to the ID of the job relation and teaches has been absorbed into class. 

2. createschema.sql creates the schema by running repeated CREATE TABLE commands for each of the relations in my proposal. Primary keys are also not declared, and keys used in relationships are declared as foreign keys with references.  There are also 3 check constraints.  One on sex, because I am requiring a sex to either be male or female.  Another on email, to make sure the formatting is correct.  Then finally, it checks to see if the length of the first name and last name of a student is less than the length of the email (as the email should be a combination of the first and last name). 

3. The dropschema.sql file drops the relations that are declared in the createschema.sql using the drop table command.  Project 4: I also added some lines to drop the functions and the trigger.

4. populatesmall.sql populates each table with tuples by calling the insert sql command.

5. populatelarge.sql command copies data over from csv files generated by the python sript createData.py. This script utilizes the faker and csv library to generate fake data and write it to a csv file. Since the faker library does ensure uniqueness, I used set data structure to ensure uniqueness for attributes that needed to be unique.  Furthermore, the script ensures real relations among the tables, instead of creating completely random data. 

6. Data directory: the data directory contains all the csv files used to populate the database using the populatelarge.sql file.  This directory also contains the createData.py script that generates the csv files.  The createData.py script utilizes a python library called Faker to generate more realistic looking data.  In order to use it, it is necessary for Faker to be installed via the pip package manager.

7. a.sql: contains 5 queries for the database

8. b.sql: contains 5 data modification queries

9. c.sql: creates 2 useful views for the database and runs a query utilizing them

10. d.sql: creates an index for each key of a relation as well as two extra indexes, while running the 5 queries from part 1 to test the effectiveness of indexes.

11. triggersfunctions.sql: adds some functions and a trigger.  The first function finds all gpa's over a certain input, and reduces them to that input. The second function is made for the trigger, and it checks all tuples being added to the student class.  If any do not have a firstname or lastname, then they are defaulted to 'unknown.'
